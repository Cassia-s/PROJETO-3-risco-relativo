import streamlit as st
import numpy as np

# --- Fun√ß√£o para formatar moeda estilo brasileiro ---
def formatar_moeda(valor):
    return f"R$ {valor:,.2f}".replace(",", "X").replace(".", ",").replace("X", ".")

# --- Configura√ß√£o da p√°gina ---
st.set_page_config(page_title="Calculadora de Risco de Cr√©dito - Super Caja", layout="centered")

st.title("üí∏ Calculadora de Risco de Cr√©dito - Super Caja")

st.markdown("""
Preencha os dados do cliente abaixo para uma **an√°lise de risco de cr√©dito**.  
Nosso sistema estima a probabilidade do cliente ser um **Bom Pagador** ou **Mau Pagador** com base nos dados fornecidos.
""")

# --- Entradas do Usu√°rio ---
st.header("üë§ Dados do Cliente")
col1, col2 = st.columns(2)

with col1:
    salario = st.number_input("üíµ Sal√°rio mensal (R$)", min_value=0.0, step=100.0, format="%.2f", value=0.0)
    dependentes = st.number_input("üë®‚Äçüë©‚Äçüëß‚Äçüë¶ N√∫mero de dependentes", min_value=0, step=1, value=0)
    dividas_mensais = st.number_input("üìâ Total de d√≠vidas mensais (R$)", min_value=0.0, step=100.0, format="%.2f", value=0.0)

with col2:
    limite_credito = st.number_input("üí≥ Limite total de cr√©dito dispon√≠vel (R$)", min_value=0.0, step=100.0, format="%.2f", value=0.0)
    uso_credito = st.number_input("üìä Uso atual do cr√©dito (R$)", min_value=0.0, step=100.0, format="%.2f", value=0.0)
    emprestimos_ativos = st.number_input("üè¶ Quantidade de empr√©stimos ativos", min_value=0, step=1, value=0)

st.subheader("üóìÔ∏è Hist√≥rico de Atrasos")
st.markdown("Informe o n√∫mero de atrasos por per√≠odo:")
atrasos_30 = st.number_input("Atrasos 30 dias", min_value=0, step=1, value=0)
atrasos_60 = st.number_input("Atrasos 60 dias", min_value=0, step=1, value=0)
atrasos_90_mais = st.number_input("Atrasos 90+ dias", min_value=0, step=1, value=0)

# --- C√°lculos ---
total_atrasos_ponderado = (atrasos_30 * 0.5) + (atrasos_60 * 1.0) + (atrasos_90_mais * 2.0)
salario_por_dependente = salario / dependentes if dependentes > 0 else (salario if salario > 0 else 500.0)
media_debt_ratio = dividas_mensais / salario if salario > 0 else 1.0
media_uso_linhas_credito = uso_credito / limite_credito if limite_credito > 0 else 1.0
indice_risco_credito = 1 + total_atrasos_ponderado / (1 + uso_credito / 1000)
peso_emprestimos = emprestimos_ativos * 1.5  # Peso ajustado

# Score com pesos refor√ßados
score_total = (
    (indice_risco_credito * 4.0) +                    # Peso maior para atrasos
    (0.8 / (salario_por_dependente / 1000)) +         # Inversamente proporcional √† renda per capita
    (media_debt_ratio * 5.0) +                        # D√≠vida sobre sal√°rio
    (media_uso_linhas_credito * 2.5) +                # Uso do cr√©dito
    peso_emprestimos                                  # Empr√©stimos ativos
)

# Normalizar score para 1 a 10
score_total = max(1.0, min(10.0, score_total / 3.0))

# --- Resultado final ---
st.header("üìä Resultado da An√°lise")
st.metric(label="üìà Score de Risco Total", value=f"{score_total:.2f}")

# Apenas duas classifica√ß√µes
if score_total <= 8.5:
    st.success("‚úÖ **Resultado: Bom Pagador**\nCliente com perfil financeiro confi√°vel.")
else:
    st.error("üö© **Resultado: Mau Pagador**\nAlto risco de inadimpl√™ncia identificado.")

# --- Resumo dos dados informados ---
st.markdown("### üí° Resumo dos Dados Informados")
st.markdown(f"- **Sal√°rio:** {formatar_moeda(salario)}")
st.markdown(f"- **D√≠vidas mensais:** {formatar_moeda(dividas_mensais)}")
st.markdown(f"- **Limite de cr√©dito:** {formatar_moeda(limite_credito)}")
st.markdown(f"- **Uso atual do cr√©dito:** {formatar_moeda(uso_credito)}")
st.markdown(f"- **Dependentes:** {dependentes}")
st.markdown(f"- **Empr√©stimos ativos:** {emprestimos_ativos}")
st.markdown(f"- **Atrasos (<30 / 60 / 90+):** {atrasos_30} / {atrasos_60} / {atrasos_90_mais}")

st.markdown("---")

# --- Explica√ß√£o ---
with st.expander("‚ÑπÔ∏è Entenda como o score √© calculado"):
    st.markdown("""
O **Score de Risco Total** avalia a chance do cliente se tornar inadimplente com base em:

- **Hist√≥rico de Atrasos:** Atrasos mais graves impactam mais.
- **Renda por Dependente:** Menor valor, maior comprometimento financeiro.
- **Propor√ß√£o de D√≠vidas:** Renda comprometida por d√≠vidas aumenta o risco.
- **Uso do Cr√©dito:** Alto uso do limite dispon√≠vel indica depend√™ncia.
- **Empr√©stimos Ativos:** Muitos empr√©stimos ativos aumentam a exposi√ß√£o.

**Classifica√ß√£o final:**
- **Score at√© 8.5** ‚Üí Perfil de **Bom Pagador**  
- **Score acima de 8.5** ‚Üí Perfil com **Alto Risco de Inadimpl√™ncia**

> ‚ö†Ô∏è Este modelo √© simulado e n√£o substitui an√°lises estat√≠sticas reais baseadas em grandes bases de dados.
""")

st.markdown("---")
st.info("Desenvolvido para Super Caja com ‚ù§Ô∏è usando Streamlit")




